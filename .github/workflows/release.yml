name: Update Version and Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Tag Version
        id: get_version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
          echo "version=$TAG_VERSION" >> "$GITHUB_OUTPUT"

      - name: Setup Git and Checkout Main
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Update Version in PHP File
        run: |
          sed -i "s/\(\* Version: \).*/\1${{ env.TAG_VERSION }}/" pkl-api-auth.php

      - name: Commit and Push Version Change
        run: |
          git add pkl-api-auth.php
          git commit -m "chore: update plugin version to ${{ env.TAG_VERSION }}"
          git push origin main

      - name: Create Clean Zip
        run: |
          # Remove development files
          rm -rf .git .github .idea .vscode node_modules tests
          rm -f .gitignore .gitattributes .distignore
          rm -f composer.lock package-lock.json yarn.lock
          rm -f README.md *.md

          # Create zip file
          zip -r ${{ github.event.repository.name }}.zip . -x ".*"

      - name: Create Release Zip
        run: |
          # Create release zip (alternative method in one step)
          git archive --format=zip --output=${{ github.event.repository.name }}-release.zip HEAD

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            This release includes the latest updates. See commit history for more details.
          draft: false
          prerelease: ${{ contains(github.ref, '-test') || contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}
          files: |
            ./${{ github.event.repository.name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}